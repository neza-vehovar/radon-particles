tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  targetNamespace: "radon.blueprints"
description: test
topology_template:
  node_templates:
    AwsS3Bucket:
      type: radon.nodes.aws.AwsS3Bucket
      metadata:
        x: "622"
        y: "269"
        displayName: "uploads_2"
      properties:
        size: "0 MB"
        name: "input"
        maxsize: ""
      requirements:
        - host:
            node: AwsPlatform
            relationship: con_HostedOn_0
            capability: host
        - invoker:
            node: AwsLambdaFunction
            relationship: con_AwsTriggers_0
            capability: invocable
        - dependency:
            node: tosca.nodes.Root
            relationship: tosca.relationships.DependsOn
            capability: tosca.capabilities.Node
    Database:
      type: tosca.nodes.Database
      metadata:
        x: "1346"
        y: "134"
        displayName: "Database"
      properties:
        password: ""
        port: ""
        name: ""
        user: ""
      requirements:
        - host:
            node: tosca.nodes.DBMS
            relationship: tosca.relationships.HostedOn
            capability: tosca.capabilities.Compute
        - dependency:
            node: tosca.nodes.Root
            relationship: tosca.relationships.DependsOn
            capability: tosca.capabilities.Node
    AwsPlatform_2:
      type: radon.nodes.aws.AwsPlatform
      metadata:
        x: "348"
        y: "428"
        displayName: "eu-west-2"
      properties:
        access_key_id: "{ get_input: access_key_id }"
        secret_access_key: "{ get_input: secret_access_key }"
        name: "London"
        region: "eu-west-2"
      requirements:
        - dependency:
            node: tosca.nodes.Root
            relationship: tosca.relationships.DependsOn
            capability: tosca.capabilities.Node
    AwsLambdaFunction:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "975"
        y: "137"
        displayName: "create_thumbnail"
      properties:
        role_name: ""
        handler: "index.handler"
        schedule: "~"
        environment: "prod"
        memory: "512"
        name: "resize"
        runtime: "nodejs"
        timeout: "3"
        role_description: ""
      requirements:
        - endpoint:
            node: Database
            relationship: con_ConnectsTo_0
            capability: database_endpoint
        - host:
            node: AwsPlatform
            relationship: con_HostedOn_2
            capability: host
        - dependency:
            node: tosca.nodes.Root
            relationship: tosca.relationships.DependsOn
            capability: tosca.capabilities.Node
    AwsPlatform:
      type: radon.nodes.aws.AwsPlatform
      metadata:
        x: "975"
        y: "430"
        displayName: "eu-west-1"
      properties:
        access_key_id: "{ get_input: access_key_id }"
        secret_access_key: "{ get_input: secret_access_key }"
        name: "Ireland"
        region: "eu-west-1"
      requirements:
        - dependency:
            node: tosca.nodes.Root
            relationship: tosca.relationships.DependsOn
            capability: tosca.capabilities.Node
    AwsS3Bucket_2:
      type: radon.nodes.aws.AwsS3Bucket
      metadata:
        x: "348"
        y: "207"
        displayName: "uploads_1"
      properties:
        size: "0 MB"
        name: "output"
        maxsize: ""
      requirements:
        - host:
            node: AwsPlatform_2
            relationship: con_HostedOn_1
            capability: host
        - invoker:
            node: AwsLambdaFunction
            relationship: con_AwsTriggers_1
            capability: invocable
        - dependency:
            node: tosca.nodes.Root
            relationship: tosca.relationships.DependsOn
            capability: tosca.capabilities.Node
  relationship_templates:
    con_HostedOn_2:
      type: tosca.relationships.HostedOn
    con_HostedOn_0:
      type: tosca.relationships.HostedOn
    con_HostedOn_1:
      type: tosca.relationships.HostedOn
    con_ConnectsTo_0:
      type: tosca.relationships.ConnectsTo
      properties:
        credential: ""
    con_AwsTriggers_0:
      type: radon.relationships.aws.AwsTriggers
      properties:
        events: ""
    con_AwsTriggers_1:
      type: radon.relationships.aws.AwsTriggers
      properties:
        events: ""
